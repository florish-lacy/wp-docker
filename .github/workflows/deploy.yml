name: Deploy to Pantheon Live

permissions:
  # Allows the tag/release to be created
  contents: write
  pull-requests: read

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          # extensions: mbstring, zip, intl, gd, pdo, pdo_mysql, bcmath, soap, xsl, xml, xmlrpc, opcache, imagick, curl, json, iconv, xmlreader, xmlwriter, simplexml, dom, fileinfo, ctype, session, tokenizer, openssl, hash, filter, pcre, posix, readline, phar, pcntl, ftp, exif, calendar, sockets, mysqli, pdo_sqlite, pdo_pgsql, pdo_sqlite, pdo_pgsql, pgsql, intl, gettext, gmp, imap, ldap, mcrypt, tidy, xml, xmlreader, xmlwriter, xsl, zip, zlib, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pdo_sqlite, pdo_pgsql, pgsql, intl, gettext, gmp, imap, ldap, mcrypt, tidy, xml, xmlreader, xmlwriter, xsl, zip, zlib, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pdo_sqlite, pdo_pgsql, pgsql, intl, gettext, gmp, imap, ldap, mcrypt, tidy, xml, xmlreader, xmlwriter, xsl, zip, zlib, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pdo_sqlite, pdo_pgsql, pgsql, intl, gettext, gmp, imap, ldap, mcrypt, tidy, xml, xmlreader, xmlwriter, xsl, zip, zlib, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pdo_sqlite, pdo_pgsql, pgsql, intl, gettext, gmp, imap, ldap, mcrypt, tidy, xml, xmlreader, xmlwriter, xsl, zip, zlib, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pdo_sqlite, pdo_pgsql, pgsql, intl, gettext, gmp, imap, ldap, mcrypt, tidy, xml, xmlreader, xmlwriter, xsl, zip, zlib, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pdo_sqlite, pdo_pgsql, pgsql, intl, gettext, gmp, imap, ldap, mcrypt, tidy, xml, xmlreader, xmlwriter, xsl, zip, zlib,

      # This runs shivammathur/setup-php as well as the PHP Compatibility check
      # - name: Setup PHP and Run PHP Compatibility
      #   uses: pantheon-systems/phpcompatibility-action@v1
      #   with:
      #     test-versions: 7.4-
      #     paths: ${{ github.workspace }}/web/wp-content/themes/florish

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer

      - name: Get Node Version
        run: |
          cat .nvmrc
          echo "::set-output name=nodeversion::$(cat .nvmrc)"
        id: get-node-version

      - name: Use Node.js ${{ steps.get-node-version.outputs.nodeversion }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.get-node-version.outputs.nodeversion }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json" # THIS PATTERN did the trick for me, since I have multiple package-lock.json files in my project

      - name: Install Dependencies
        run: |
          env
          echo "node: $(node --version)"
          echo "npm: $(npm --version)"
          npm install

      - name: Build Composer autoload
        run: "npm run build:composer"

      - name: Build Theme
        run: "npm run build:theme"

      # - name: Merge master -> uat
      #   uses: devmasx/merge-branch@master
      #   with:
      #     type: now
      #     target_branch: uat
      #     message: Merge staging into uat
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
