# WP Docker Compose - Local Development
# Built using a combo of the following tutorials:
#
# https://stackoverflow.com/questions/65321295/using-volumes-in-docker-to-access-container-filesystem
version: "3.3"

volumes:
  db_data:
  # wp_data: # Mount the named volume. Comment this out if you want to use the bind mount

services:
  wordpress:
    # image: wordpress:6.4.3 # Uncomment to use fresh WP install. Takes precedence over `build` prop.
    build: . # Use the Dockerfile instead of a fresh WP install.
    depends_on:
      - db

    ports:
      - 80:80
    restart: always
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: $MYSQL_USER
      WORDPRESS_DB_PASSWORD: $MYSQL_PASSWORD
      WORDPRESS_DB_NAME: $MYSQL_DATABASE
      WORDPRESS_DB_CHARSET: utf8mb4
      WORDPRESS_TABLE_PREFIX: wpflris_
      WORDPRESS_WP_SITEURL: http://localhost
      WORDPRESS_DUPLICATOR_AUTH_KEY: "9oKV8/+Q4 e9<#QE|CyK,H~1/VeF=Kd~0{Z!2t@KT{:~EhFxq10.ddRyrwPX@(EZ"
      WORDPRESS_AUTH_KEY: "=FQe2RTzNVnmkXk~IDb!36]Xq^)CjUN^Qu9!6^K!#mz+?p%|-~2)GgAm2Pwt:zv0"
      WORDPRESS_SECURE_AUTH_KEY: "RJ{%)(p#jL8} kvCtLTWe)3rcKx|Qu4O, HfU=+87bsaAlO#U.Na86:x7Pd|!~og"
      WORDPRESS_LOGGED_IN_KEY: "Km[6Jd56WJ!}V-e(BCP.Bpp3)z/_RT2,!z}l5!43hOQh&n+<itt=P^K*g1M/2gfT"
      WORDPRESS_NONCE_KEY: "_d1r2TV9fgwJ ,ecy1%v{tLK?8Zqy|}{M %13Bz]=Z|FJKJBw3YCDH$^a3$~X)S7"
      WORDPRESS_AUTH_SALT: "X<)nOz3bG~~X`ZcM;ZYZgTU>Tu_!oGO(NqWFtO^]Tb73$r[;&!w=:bK-bOX27 1n"
      WORDPRESS_SECURE_AUTH_SALT: "vU@p(V_X{nsYD7>rjoyMPFx&^p+c:@2J/K|Ns8|I,LYK|pysWuE#G(WpuLFoc)7"
      WORDPRESS_LOGGED_IN_SALT: "*Mq.XLR3(?!T1UW9>wnVg7N5f5mIwR|=2Lg3L0h:-WG`WD}~c9kL2pX*($61|XPY"
      WORDPRESS_NONCE_SALT: "B2[gULt#Q0E5Hs4k3=g^jO$^l0ds})_r*~u$Y+^+.HHcFb&x*qqRH%]3b):hvvJz"

      WORDPRESS_CONFIG_EXTRA: |
        /* development parameters */
        define('WP_CACHE', false);
        define('ENVIRONMENT', 'local');

        /* add anymore custom configs here... */
    volumes:
      # - wp_data:/var/www/html # This is a named docker volume, you can use this OR the following bind mount

      - ./Florish:/var/www/html
      # - ./php:/usr/local/etc/php
      # - ./wp-data/wp-content/themes:/var/www/html/wp-content/themes
      # - ./wp-data/wp-content/plugins:/var/www/html/wp-content/plugins
      # - ./wp-data/wp-content/uploads:/var/www/html/wp-content/uploads
      # - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini

  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture (Apple Mx chips)
    image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following lines and comment out the above image
    # image: mysql:8.0.27
    # platform: linux/amd64
    command: "--default-authentication-plugin=mysql_native_password"
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    expose:
      - 3306
      - 33060

  phpmyadmin:
    image: phpmyadmin
    depends_on:
      - db
    ports:
      - "8080:80"
    restart: always
    env_file: .env
    environment:
      UPLOAD_LIMIT: 100000000
      PMA_PORT: 3306
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
